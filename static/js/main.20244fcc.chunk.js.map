{"version":3,"sources":["components/StarRating.js","components/BookDetails.js","components/BarcodeScanner.js","components/Navbar.js","components/HeroSection.js","components/BookList.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["StarRating","_ref","rating","fullStars","Math","floor","halfStars","ceil","emptyStars","renderStars","count","type","starType","Array","fill","join","React","createElement","BookDetails","book","isVisible","publish_date","publisher","language","className","first_sentence","isbn","edition_key","number_of_pages_median","subject","toFixed","BarcodeScanner","onBarcodeScanned","useEffect","window","innerWidth","Quagga","init","inputStream","name","target","document","querySelector","decoder","readers","err","console","error","start","onDetected","result","scannedBarcode","codeResult","code","log","stop","id","Navbar","searchTerm","onSearchChange","onSearchSubmit","navigate","useNavigate","isMobile","setIsMobile","useState","showVideo","setShowVideo","barcodeCaptured","setBarcodeCaptured","books","setBooks","hasSearched","setHasSearched","handleResize","addEventListener","removeEventListener","currentURL","location","pathname","Fragment","onClick","placeholder","value","onChange","handleSearchFieldClick","barcode","handleVideoClose","HeroSection","src","alt","BookList","setSearchTerm","selectedBook","setSelectedBook","currentPage","setCurrentPage","itemsPerPage","fetch","then","response","json","data","booksWithoutRomance","works","filter","work","includes","cover_edition_key","map","key","title","cover_i","catch","indexOfLastBook","indexOfFirstBook","currentBooks","slice","paginate","pageNumber","event","handleSearchSubmit","query","concat","docs","Slider","dots","infinite","speed","slidesToShow","slidesToScroll","length","author_name","ratings_average","round","edition_count","toggleDetails","from","_","index","href","About","App","Router","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"0VAsBeA,MAnBIC,IAAgB,IAAfC,OAAEA,GAAQD,EAC5B,MAAME,EAAYC,KAAKC,MAAMH,GACvBI,EAAYF,KAAKG,KAAKL,EAASC,GAC/BK,EAAa,EAAIL,EAAYG,EAE7BG,EAAcA,CAACC,EAAOC,KAC1B,MAAMC,EAAoB,SAATD,EAAkB,SAAe,SAATA,EAAkB,OAAM,SACjE,OAAOE,MAAMH,GAAOI,KAAKF,GAAUG,KAAK,KAG1C,OACEC,IAAAC,cAAA,WACGR,EAAYN,EAAW,QACvBM,EAAYH,EAAW,QACvBG,EAAYD,EAAY,WC8BhBU,MA3CKjB,IAAyB,IAAxBkB,KAAEA,EAAIC,UAAEA,GAAWnB,EACtC,MAAMoB,aAAEA,EAAYC,UAAEA,EAASC,SAAEA,GAAaJ,EAE9C,OACEH,IAAAC,cAAA,OAAKO,UAAU,2BAGbR,IAAAC,cAAA,SAAIE,EAAKM,gBAAkB,OAC3BT,IAAAC,cAAA,OAAKO,UAAU,oBACbR,IAAAC,cAAA,OAAKO,UAAU,oBACbR,IAAAC,cAAA,SAAGD,IAAAC,cAAA,YAAM,qBAAwBD,IAAAC,cAAA,WAAM,IAAEI,GAAeA,EAAa,IAAc,QAErFL,IAAAC,cAAA,OAAKO,UAAU,oBACbR,IAAAC,cAAA,SAAGD,IAAAC,cAAA,YAAM,cAAiBD,IAAAC,cAAA,WAAM,IAAEK,EAAYA,EAAU,GAAK,QAE/DN,IAAAC,cAAA,OAAKO,UAAU,oBACbR,IAAAC,cAAA,SAAGD,IAAAC,cAAA,YAAM,aAAgBD,IAAAC,cAAA,WAAM,IAAEM,GAA2B,OAAfA,EAAS,GAAc,UAAY,SAGpFP,IAAAC,cAAA,OAAKO,UAAU,oBACbR,IAAAC,cAAA,OAAKO,UAAU,oBACbR,IAAAC,cAAA,SAAGD,IAAAC,cAAA,YAAM,SAAYD,IAAAC,cAAA,WAAM,IAAEE,EAAKO,KAAOP,EAAKO,KAAK,GAAK,QAE1DV,IAAAC,cAAA,OAAKO,UAAU,oBACbR,IAAAC,cAAA,SAAGD,IAAAC,cAAA,YAAM,YAAeD,IAAAC,cAAA,WAAM,IAAEE,EAAKQ,YAAcR,EAAKQ,YAAY,GAAK,QAE3EX,IAAAC,cAAA,OAAKO,UAAU,oBACbR,IAAAC,cAAA,SAAGD,IAAAC,cAAA,YAAM,oBAAuBD,IAAAC,cAAA,WAAM,IAAEE,EAAKS,uBAAyB,MAAO,KAGjFZ,IAAAC,cAAA,SAAG,WAAQD,IAAAC,cAAA,aAAQE,EAAKU,QAAUV,EAAKU,QAAQd,KAAK,MAAQ,QAC5DC,IAAAC,cAAA,SAAG,SAAMD,IAAAC,cAAA,aAAQE,EAAKU,QAAUV,EAAKU,QAAQd,KAAK,MAAQ,QACzDI,EAAKjB,QACJc,IAAAC,cAAA,WACED,IAAAC,cAAA,SAAG,WAASE,EAAKjB,OAAO4B,QAAQ,IAChCd,IAAAC,cAACjB,EAAU,CAACE,OAAQiB,EAAKjB,0CCSpB6B,MA1CQ9B,IAA0B,IAAzB+B,iBAAEA,GAAkB/B,EAmC1C,OAlCAgC,oBAAU,KAGR,GAFiBC,OAAOC,YAAc,IA2BpC,OAxBAC,IAAOC,KAAK,CACVC,YAAa,CACXC,KAAM,OACN5B,KAAM,aACN6B,OAAQC,SAASC,cAAc,qBAEjCC,QAAS,CACPC,QAAS,CAAC,gBAEVC,IACEA,EACFC,QAAQC,MAAM,6BAA8BF,GAG9CT,IAAOY,UAGTZ,IAAOa,WAAYC,IACjB,MAAMC,EAAiBD,EAAOE,WAAWC,KACzCP,QAAQQ,IAAI,YAAcH,GAC1BnB,EAAiBmB,GACjBf,IAAOmB,SAGF,KACLnB,IAAOmB,SAGV,CAACvB,IAGFhB,IAAAC,cAAA,WACGiB,OAAOC,YAAc,KAAOnB,IAAAC,cAAA,OAAKuC,GAAG,sBCmF5BC,MAzHAxD,IAAoD,IAAnDyD,WAAEA,EAAUC,eAAEA,EAAcC,eAAEA,GAAgB3D,EAC5D,MAAM4D,EAAWC,eACVC,EAAUC,GAAeC,mBAAS/B,OAAOC,YAAc,MACvD+B,EAAWC,GAAgBF,oBAAS,IACpCG,EAAiBC,GAAsBJ,oBAAS,IAChDK,EAAOC,GAAYN,mBAAS,KAC5BO,EAAaC,GAAkBR,oBAAS,GAE/ChC,oBAAU,KACR,MAAMyC,EAAeA,KACnBV,EAAY9B,OAAOC,YAAc,MAKnC,OAFAD,OAAOyC,iBAAiB,SAAUD,GAE3B,KACLxC,OAAO0C,oBAAoB,SAAUF,KAEtC,IAEH,MAsCMG,EAAa3C,OAAO4C,SAASC,SAEnC,OACE/D,IAAAC,cAAAD,IAAAgE,SAAA,KACEhE,IAAAC,cAAA,OAAKO,UAAU,UACbR,IAAAC,cAAA,OAAKO,UAAU,gBACbR,IAAAC,cAAA,UAAI,wBAEND,IAAAC,cAAA,OAAKO,UAAU,iBACbR,IAAAC,cAAA,MAAIO,UAAU,eACZR,IAAAC,cAAA,UACED,IAAAC,cAAA,UAAQgE,QAASA,IAAMpB,EAAS,MAAM,SAExC7C,IAAAC,cAAA,UACED,IAAAC,cAAA,UAAQgE,QAASA,IAAMpB,EAAS,WAAW,WAG/B,MAAfgB,GAAqC,oBAAfA,EACrBd,EACE/C,IAAAC,cAAAD,IAAAgE,SAAA,KACEhE,IAAAC,cAAA,WACED,IAAAC,cAAA,SACEN,KAAK,OACLuE,YAAY,eACZC,MAAOzB,EACP0B,SAAUzB,EACVsB,QApCaI,KAC7BlB,GAAa,GACbE,GAAmB,MAoCJH,GACClD,IAAAC,cAAA,OAAKO,UAAU,mBAEbR,IAAAC,cAACc,EAAc,CAACC,iBArENsD,IAC5BxC,QAAQQ,IAAI,mBAAoBgC,GAChCjB,GAAmB,GACnBF,GAAa,GACbR,EAAe,CAAEnB,OAAQ,CAAE2C,MAAOG,QAkEhBtE,IAAAC,cAAA,UAAQO,UAAU,kBAAkByD,QArC/BM,KACvBpB,GAAa,GACbE,GAAmB,KAoCCrD,IAAAC,cAAA,KAAGO,UAAU,mBAInBR,IAAAC,cAAA,UAAQgE,QAASrB,GACf5C,IAAAC,cAAA,KAAGO,UAAU,qBAKnBR,IAAAC,cAAAD,IAAAgE,SAAA,KACEhE,IAAAC,cAAA,SACEN,KAAK,OACL6C,GAAG,cACH0B,YAAY,0BACZC,MAAOzB,EACP0B,SAAUzB,IAEZ3C,IAAAC,cAAA,UAAQgE,QAASrB,GACf5C,IAAAC,cAAA,KAAGO,UAAU,oBAIjB,eCvGCgE,MAXKA,IAEhBxE,IAAAC,cAAA,OAAKO,UAAU,gBAEbR,IAAAC,cAAA,OAAKwE,IAAI,8BAA8BC,IAAI,eAC3C1E,IAAAC,cAAA,UAAI,mCACJD,IAAAC,cAAA,SAAG,sDC6MM0E,MA3MEA,KACf,MAAOrB,EAAOC,GAAYN,mBAAS,KAC5BP,EAAYkC,GAAiB3B,mBAAS,KAEtC4B,EAAcC,GAAmB7B,mBAAS,OAC1C8B,EAAaC,GAAkB/B,mBAAS,IACxCgC,GAAgBhC,mBAAS,KACzBO,EAAaC,GAAkBR,oBAAS,GAE/ChC,oBAAU,KAERiE,MAAM,sDACHC,KAAMC,GAAaA,EAASC,QAC5BF,KAAMG,IAEL,MAAMC,EAAsBD,EAAKE,MAC9BC,OAAQC,IAAUA,EAAK7E,QAAQ8E,SAAS,sBACxCF,OAAQC,GAASA,EAAKE,mBACtBC,IAAKH,IAAI,CACRI,IAAKJ,EAAKE,kBACVG,MAAOL,EAAKK,MACZC,QAAS,QAEbzC,EAASgC,KAEVU,MAAOlE,GAAUD,QAAQC,MAAM,uBAAwBA,KACzD,IAEH,MA0DMmE,EAAkBnB,EAAcE,EAChCkB,EAAmBD,EAAkBjB,EACrCmB,EAAe9C,EAAM+C,MAAMF,EAAkBD,GAE7CI,EAAYC,IAChBvB,EAAeuB,GACfzB,EAAgB,OAclB,OACE9E,IAAAC,cAAA,WACED,IAAAC,cAACwC,EAAM,CACLC,WAAYA,EACZC,eA9EsB6D,IAC1B5B,EAAc4B,EAAMhF,OAAO2C,QA8EvBvB,eA3EqB6D,KACzB,MAAMC,EAAK,yCAAAC,OAA4CjE,GACvDZ,QAAQQ,IAAI,iBAAmBoE,GAG/BxB,MAAMwB,GACHvB,KAAMC,GAAaA,EAASC,QAC5BF,KAAMG,IACL/B,EAAS+B,EAAKsB,MACdnD,GAAe,KAEhBwC,MAAOlE,GAAUD,QAAQC,MAAM,uBAAwBA,QAuEtDyB,GACAxD,IAAAC,cAAAD,IAAAgE,SAAA,KAEEhE,IAAAC,cAACuE,EAAW,MAEZxE,IAAAC,cAAA,OAAKO,UAAU,sBACbR,IAAAC,cAAA,UAAI,aACJD,IAAAC,cAAC4G,IA5BY,CACrBC,MAAM,EACNC,UAAU,EACVC,MAAO,IACPC,aAAc,EACdC,eAAgB,GAwBL5D,EAAMuC,IAAK1F,GACVH,IAAAC,cAAA,OAAK6F,IAAK3F,EAAK2F,IAAKtF,UAAU,iBAC5BR,IAAAC,cAAA,OACEwE,IAAG,yCAAAkC,OAA2CxG,EAAK2F,IAAG,UACtDpB,IAAG,aAAAiC,OAAexG,EAAK4F,OACvBvF,UAAU,gBAEZR,IAAAC,cAAA,SAAIE,EAAK4F,YAOpBvC,GAAgC,IAAjBF,EAAM6D,QACpBnH,IAAAC,cAAA,SAAG,uDAEJuD,GAAeF,EAAM6D,OAAS,GAC7BnH,IAAAC,cAAA,OAAKO,UAAU,sBACXR,IAAAC,cAAA,UACGmG,EAAaP,IAAK1F,GACjBH,IAAAC,cAAA,MAAI6F,IAAK3F,EAAK2F,IAAKtF,UAAU,kBACzBR,IAAAC,cAAA,SAAGD,IAAAC,cAAA,SAAIE,EAAK4F,OAAU/F,IAAAC,cAAA,WACtBD,IAAAC,cAAA,aAAO,MAAIE,EAAKiH,YAAcjH,EAAKiH,YAAYrH,KAAK,MAAQ,UAAU,oBAAkBI,EAAKkH,gBAAkBjI,KAAKkI,MAA6B,IAAvBnH,EAAKkH,iBAAyB,IAAM,MAAM,qBAAmBlH,EAAKoH,gBAC9LvH,IAAAC,cAAA,OAAKO,UAAU,aACbR,IAAAC,cAAA,OAAKO,UAAU,gBACZL,EAAK6F,QACJhG,IAAAC,cAAA,OACEwE,IAAG,uCAAAkC,OAAyCxG,EAAK6F,QAAO,UACxDtB,IAAG,aAAAiC,OAAexG,EAAK4F,OACvBvF,UAAU,gBAGZR,IAAAC,cAAA,OACEwE,IAjEA,0CAkEAC,IAAI,aAGR1E,IAAAC,cAAA,OAAKO,UAAU,aACbR,IAAAC,cAAA,UAAQgE,QAASA,IAnFhB9D,KACrB2E,EAAgBD,IAAiB1E,EAAO,KAAOA,IAkFJqH,CAAcrH,IAClC0E,IAAiB1E,EAAO,eAAiB,gBAE5CH,IAAAC,cAAA,WACG4E,IAAiB1E,GAAQH,IAAAC,cAACC,EAAW,CAACC,KAAMA,YAWhEmD,EAAM6D,OAASlC,GACdjF,IAAAC,cAAA,WACED,IAAAC,cAAA,MAAIO,UAAU,cACXX,MAAM4H,KAAK,CAAEN,OAAQ/H,KAAKG,KAAK+D,EAAM6D,OAASlC,KAAiBY,IAC9D,CAAC6B,EAAGC,IACF3H,IAAAC,cAAA,MACE6F,IAAK6B,EAAQ,EACbnH,UAAWuE,IAAgB4C,EAAQ,EAAI,SAAW,GAClD1D,QAASA,IAAMqC,EAASqB,EAAQ,IAEhC3H,IAAAC,cAAA,KAAG2H,KAAK,KAAK3D,QAASA,IAAMqC,EAASqB,EAAQ,IAC1CA,EAAQ,SC9LdE,MAVDA,IAEV7H,IAAAC,cAAA,WACED,IAAAC,cAACwC,EAAM,MACPzC,IAAAC,cAAA,UAAI,eCYK6H,MAdHA,IAER9H,IAAAC,cAAC8H,IAAM,KACL/H,IAAAC,cAAA,WAEED,IAAAC,cAAC+H,IAAM,KACLhI,IAAAC,cAACgI,IAAK,CAACC,KAAK,SAASC,QAASnI,IAAAC,cAAC4H,EAAK,QACpC7H,IAAAC,cAACgI,IAAK,CAACC,KAAK,IAAIC,QAASnI,IAAAC,cAAC0E,EAAQ,WCD7ByD,MAZSC,IAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAArD,KAAAoD,EAAAE,KAAA,UAAqBtD,KAAKlG,IAAiD,IAAhDyJ,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAAS7J,EACpEyJ,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAQT,MCDDU,IAASC,WAAWvH,SAASwH,eAAe,SACpDC,OACHlJ,IAAAC,cAACD,IAAMmJ,WAAU,KACfnJ,IAAAC,cAAC6H,EAAG,QAORM","file":"static/js/main.20244fcc.chunk.js","sourcesContent":["// src/components/StarRating.js\nimport React from 'react';\n\nconst StarRating = ({ rating }) => {\n  const fullStars = Math.floor(rating);\n  const halfStars = Math.ceil(rating - fullStars);\n  const emptyStars = 5 - fullStars - halfStars;\n\n  const renderStars = (count, type) => {\n    const starType = type === 'full' ? '★' : type === 'half' ? '½' : '☆';\n    return Array(count).fill(starType).join('');\n  };\n\n  return (\n    <div>\n      {renderStars(fullStars, 'full')}\n      {renderStars(halfStars, 'half')}\n      {renderStars(emptyStars, 'empty')}\n    </div>\n  );\n};\n\nexport default StarRating;\n","// src/components/BookDetails.js\nimport React, { useState } from 'react';\nimport StarRating from './StarRating';\n\nconst BookDetails = ({ book, isVisible }) => {\n  const { publish_date, publisher, language } = book;\n\n  return (\n    <div className=\"book-details-transition\">\n      {/* <h3>{book.title}</h3>\n      by {book.author_name ? book.author_name.join(', ') : 'N/A'} */}\n      <p>{book.first_sentence || 'N/A'}</p>\n      <div className=\"book-details-row\">\n        <div className=\"book-publication\">\n          <p><span>Publication Date:</span><br /> {publish_date ? publish_date[0] || 'N/A' : 'N/A'}</p>\n        </div>\n        <div className=\"book-publication\">\n          <p><span>Publisher:</span><br /> {publisher ? publisher[0] : 'N/A'}</p>\n        </div>\n        <div className=\"book-publication\">\n          <p><span>Language:</span><br /> {language && language[0] == 'eng' ? 'English' : 'N/A'}</p>\n        </div>\n      </div>\n      <div className=\"book-details-row\">\n        <div className=\"book-publication\">\n          <p><span>ISBN:</span><br /> {book.isbn ? book.isbn[0] : 'N/A'}</p>\n        </div>\n        <div className=\"book-publication\">\n          <p><span>Edition:</span><br /> {book.edition_key ? book.edition_key[0] : 'N/A'}</p>\n        </div>\n        <div className=\"book-publication\">\n          <p><span>Number of Pages:</span><br /> {book.number_of_pages_median + ' ' || 'N/A'}</p>\n        </div>\n      </div>\n      <p>Genres: <small>{book.subject ? book.subject.join(', ') : 'N/A'}</small></p>\n      <p>Tags: <small>{book.subject ? book.subject.join(', ') : 'N/A'}</small></p>\n      {book.rating && (\n        <div>\n          <p>Rating: {book.rating.toFixed(1)}</p>\n          <StarRating rating={book.rating} />\n        </div>\n      )}\n      {/* Add more details as needed */}\n    </div>\n  );\n};\n\nexport default BookDetails;\n","// BarcodeScanner.js\n\nimport React, { useEffect } from 'react';\nimport Quagga from 'quagga';\nimport './BarcodeScanner.css'; // Import a CSS file for styling\n\nconst BarcodeScanner = ({ onBarcodeScanned }) => {\n  useEffect(() => {\n    const isMobile = window.innerWidth <= 768;\n\n    if (isMobile) {\n      Quagga.init({\n        inputStream: {\n          name: 'Live',\n          type: 'LiveStream',\n          target: document.querySelector('#barcode-scanner'),\n        },\n        decoder: {\n          readers: ['ean_reader'],\n        },\n      }, (err) => {\n        if (err) {\n          console.error('Error initializing Quagga:', err);\n          return;\n        }\n        Quagga.start();\n      });\n\n      Quagga.onDetected((result) => {\n        const scannedBarcode = result.codeResult.code;\n        console.log(\"Scanned: \" + scannedBarcode);\n        onBarcodeScanned(scannedBarcode);\n        Quagga.stop();\n      });\n\n      return () => {\n        Quagga.stop();\n      };\n    }\n  }, [onBarcodeScanned]);\n\n  return (\n    <div>\n      {window.innerWidth <= 768 && <div id=\"barcode-scanner\"></div>}\n    </div>\n  );\n};\n\nexport default BarcodeScanner;\n","import React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport './Navbar.css';\nimport BarcodeScanner from './BarcodeScanner';\n\nconst Navbar = ({ searchTerm, onSearchChange, onSearchSubmit }) => {\n  const navigate = useNavigate();\n  const [isMobile, setIsMobile] = useState(window.innerWidth <= 768);\n  const [showVideo, setShowVideo] = useState(false);\n  const [barcodeCaptured, setBarcodeCaptured] = useState(false);\n  const [books, setBooks] = useState([]);\n  const [hasSearched, setHasSearched] = useState(false);\n\n  useEffect(() => {\n    const handleResize = () => {\n      setIsMobile(window.innerWidth <= 768);\n    };\n\n    window.addEventListener('resize', handleResize);\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  const handleBarcodeScanned = (barcode) => {\n    console.log('Scanned barcode:', barcode);\n    setBarcodeCaptured(true);\n    setShowVideo(false);\n    onSearchChange({ target: { value: barcode } }); // Update searchTerm with scanned barcode\n  };\n\n  const handleSearchInApp = () => {\n    console.log('Search in app for ISBN:', searchTerm);\n    const query = `https://openlibrary.org/search.json?q=${searchTerm}`;\n\n    // Fetch the data from the API\n    fetch(query)\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        return response.json();\n      })\n      .then((data) => {\n        onSearchSubmit(); // Call the provided onSearchSubmit prop\n      })\n      .catch((error) => {\n        console.error('Error fetching data:', error.message);\n        // Handle the error, e.g., display a user-friendly message\n      });\n  };\n\n  const handleSearchFieldClick = () => {\n    setShowVideo(true);\n    setBarcodeCaptured(false);\n  };\n\n  const handleVideoClose = () => {\n    setShowVideo(false);\n    setBarcodeCaptured(false);\n  };\n\n  const currentURL = window.location.pathname;\n\n  return (\n    <>\n      <nav className=\"navbar\">\n        <div className=\"navbar-title\">\n          <h2>The Yellow Book Bag</h2>\n        </div>\n        <div className=\"navbar-search\">\n          <ul className=\"navbar-list\">\n            <li>\n              <button onClick={() => navigate('/')}>Home</button>\n            </li>\n            <li>\n              <button onClick={() => navigate('/about')}>About</button>\n            </li>\n          </ul>\n          {currentURL === '/' || currentURL === '/yellowbookbag/' ? (\n            isMobile ? (\n              <>\n                <div>\n                  <input\n                    type=\"text\"\n                    placeholder=\"Scan ISBN...\"\n                    value={searchTerm}\n                    onChange={onSearchChange}\n                    onClick={handleSearchFieldClick}\n                  />\n                  {showVideo && (\n                    <div className=\"video-container\">\n                      {/* Assuming BarcodeScanner component works as expected */}\n                      <BarcodeScanner onBarcodeScanned={handleBarcodeScanned} />\n                      <button className=\"close-video-btn\" onClick={handleVideoClose}>\n                        <i className=\"fas fa-times\"></i>\n                      </button>\n                    </div>\n                  )}\n                  <button onClick={onSearchSubmit}>\n                    <i className=\"fas fa-search\"></i>\n                  </button>\n                </div>\n              </>\n            ) : (\n              <>\n                <input\n                  type=\"text\"\n                  id=\"searchInput\"\n                  placeholder=\"Enter your search query\"\n                  value={searchTerm}\n                  onChange={onSearchChange}\n                />\n                <button onClick={onSearchSubmit}>\n                  <i className=\"fas fa-search\"></i>\n                </button>\n              </>\n            )\n          ) : null}\n        </div>\n      </nav>\n    </>\n  );\n};\n\nexport default Navbar;","// HeroSection.js\n\nimport React from 'react';\nimport './HeroSection.css'; // Import the CSS file for styling\n\nconst HeroSection = () => {\n  return (\n    <div className=\"hero-section\">\n      {/* Your hero image and content go here */}\n      <img src=\"path-to-your-hero-image.jpg\" alt=\"Hero Image\" />\n      <h1>Welcome to the Open Library App</h1>\n      <p>Discover the latest books and more...</p>\n    </div>\n  );\n};\n\nexport default HeroSection;\n","// BookList.js\nimport React, { useState, useEffect } from 'react';\nimport Slider from 'react-slick';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport BookDetails from './BookDetails';\nimport Navbar from './Navbar';\nimport HeroSection from './HeroSection';\nimport './Modal.css';\nimport './BookList.css'; // Import the new CSS file\n\nconst BookList = () => {\n  const [books, setBooks] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  // const [scannedBarcode, setScannedBarcode] = useState('');\n  const [selectedBook, setSelectedBook] = useState(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage] = useState(10);\n  const [hasSearched, setHasSearched] = useState(false);\n\n  useEffect(() => {\n    // Fetch data from the Open Library API for popular books (no specific genre) with cover images\n    fetch('https://openlibrary.org/subjects/new.json?limit=10')\n      .then((response) => response.json())\n      .then((data) => {\n        // Filter out works with the \"romance\" genre\n        const booksWithoutRomance = data.works\n          .filter((work) => !work.subject.includes('/subjects/romance'))\n          .filter((work) => work.cover_edition_key) // Filter out works without cover images\n          .map((work) => ({\n            key: work.cover_edition_key,\n            title: work.title,\n            cover_i: null, // You can set this to null or fetch cover_i using another API endpoint\n          }));\n        setBooks(booksWithoutRomance);\n      })\n      .catch((error) => console.error('Error fetching data:', error));\n  }, []);\n  \n  const handleScan = (isbn) => {\n    setSearchTerm(isbn);\n  };\n\n  const handleSearchChange = (event) => {\n    setSearchTerm(event.target.value);\n  };\n\n  const handleSearchSubmit = () => {\n    const query = `https://openlibrary.org/search.json?q=${searchTerm}`;\n    console.log(\"Query String: \" + query);\n\n    // Fetch the data from the API\n    fetch(query)\n      .then((response) => response.json())\n      .then((data) => {\n        setBooks(data.docs);\n        setHasSearched(true);\n      })\n      .catch((error) => console.error('Error fetching data:', error));\n\n  };\n\n  // const handleSearchSubmit = () => {\n  //   console.log('Search in app for ISBN:', scannedBarcode);\n  \n  //   const query = `https://openlibrary.org/search.json?q=${scannedBarcode}`;\n  \n  //   // Fetch the data from the API\n  //   fetch(query)\n  //     .then((response) => {\n  //       if (!response.ok) {\n  //         throw new Error(`HTTP error! Status: ${response.status}`);\n  //       }\n  //       return response.json();\n  //     })\n  //     .then((data) => {\n  //       setBooks(data.docs);\n  //       setHasSearched(true);\n  //     })\n  //     .catch((error) => {\n  //       console.error('Error fetching data:', error.message);\n  //       // Handle the error, e.g., display a user-friendly message\n  //     });\n  // };\n  \n  const handleViewDetails = (book) => {\n    setSelectedBook(book);\n  };\n\n  const handleCloseDetails = () => {\n    setSelectedBook(null);\n  };\n\n  const toggleDetails = (book) => {\n    setSelectedBook(selectedBook === book ? null : book);\n  };\n\n  const indexOfLastBook = currentPage * itemsPerPage;\n  const indexOfFirstBook = indexOfLastBook - itemsPerPage;\n  const currentBooks = books.slice(indexOfFirstBook, indexOfLastBook);\n\n  const paginate = (pageNumber) => {\n    setCurrentPage(pageNumber);\n    setSelectedBook(null);\n  };\n\n  const noCoverImageUrl = 'https://via.placeholder.com/200x300.png'; // Replace with your actual \"no cover\" image URL\n\n  const sliderSettings = {\n    dots: true,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 5,\n    slidesToScroll: 1,\n  };\n\n\n  return (\n    <div>\n      <Navbar\n        searchTerm={searchTerm}\n        onSearchChange={handleSearchChange}\n        onSearchSubmit={handleSearchSubmit}\n      />\n      {/* <Navbar\n        scannedBarcode={scannedBarcode}\n        onSearchChange={handleSearchChange}\n        onSearchSubmit={handleSearchSubmit}\n      /> */}\n      {!hasSearched && (\n        <>\n        {/* Include the HeroSection component */}\n          <HeroSection />\n          {/* Include the ISBNScanner component */}\n          <div className=\"carousel-container\">\n            <h2>New Books</h2>\n            <Slider {...sliderSettings}>\n              {books.map((book) => (\n                <div key={book.key} className=\"carousel-item\">\n                  <img\n                    src={`https://covers.openlibrary.org/b/olid/${book.key}-M.jpg`}\n                    alt={`Cover for ${book.title}`}\n                    className=\"cover-image\"\n                  />\n                  <p>{book.title}</p>\n                </div>\n              ))}\n            </Slider>\n          </div>\n        </>\n      )}\n      {hasSearched && books.length === 0 && (\n        <p>No books found. Please try a different search term.</p>\n      )}\n      {hasSearched && books.length > 0 && (\n        <div className=\"carousel-container\">\n            <ul>\n              {currentBooks.map((book) => (\n                <li key={book.key} className=\"book-container\">\n                    <p><b>{book.title}</b><br />\n                    <small>by {book.author_name ? book.author_name.join(', ') : 'Unknown'} | Star Reviews: {book.ratings_average ? Math.round(book.ratings_average * 100) / 100 : 'N/A'} | Edition count: {book.edition_count}</small></p>\n                  <div className=\"book-info\">\n                    <div className=\"book-details\">\n                      {book.cover_i ? (\n                        <img\n                          src={`https://covers.openlibrary.org/b/id/${book.cover_i}-M.jpg`}\n                          alt={`Cover for ${book.title}`}\n                          className=\"cover-image\"\n                        />\n                      ) : (\n                        <img\n                          src={noCoverImageUrl}\n                          alt=\"No Cover\"\n                        />\n                      )}\n                      <div className=\"book-text\">\n                        <button onClick={() => toggleDetails(book)}>\n                          {selectedBook === book ? 'Hide Details' : 'View Details'}\n                        </button>\n                        <div>\n                          {selectedBook === book && <BookDetails book={book} />}\n                        </div>\n                      </div>\n                      {/* Conditionally render the details based on the button click */}\n                    </div>\n                  </div>\n                </li>\n              ))}\n            </ul>\n            </div>\n      )}\n      {books.length > itemsPerPage && (\n        <nav>\n          <ul className=\"pagination\">\n            {Array.from({ length: Math.ceil(books.length / itemsPerPage) }).map(\n              (_, index) => (\n                <li\n                  key={index + 1}\n                  className={currentPage === index + 1 ? 'active' : ''}\n                  onClick={() => paginate(index + 1)}\n                >\n                  <a href=\"#!\" onClick={() => paginate(index + 1)}>\n                    {index + 1}\n                  </a>\n                </li>\n              )\n            )}\n          </ul>\n        </nav>\n      )}\n    </div>\n  );\n};\n\nexport default BookList;\n","// About.js\nimport React from 'react';\nimport Navbar from './Navbar';\n\nconst About = () => {\n  return (\n    <div>\n      <Navbar />\n      <h2>About Page</h2>\n      {/* Add content for your about page */}\n    </div>\n  );\n};\n\nexport default About;\n","// src/App.js\nimport React from 'react';\nimport { HashRouter as Router, Routes, Route } from 'react-router-dom';\nimport BookList from './components/BookList';\nimport About from './components/About';\n\nconst App = () => {\n  return (\n    <Router>\n      <div>\n        {/* <BookList /> */}\n        <Routes>\n          <Route path=\"/about\" element={<About />} />\n          <Route path=\"/\" element={<BookList />} />\n        </Routes>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}