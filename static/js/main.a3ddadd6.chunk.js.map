{"version":3,"sources":["components/StarRating.js","components/BookDetails.js","components/BarcodeScanner.js","components/Navbar.js","components/WavyHero.js","components/HeroSection.js","components/BookList.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["StarRating","_ref","rating","fullStars","Math","floor","halfStars","ceil","emptyStars","renderStars","count","type","starType","Array","fill","join","React","createElement","BookDetails","book","isVisible","publish_date","publisher","language","className","first_sentence","isbn","edition_key","number_of_pages_median","subject","toFixed","BarcodeScanner","onBarcodeScanned","useEffect","window","innerWidth","Quagga","init","inputStream","name","target","document","querySelector","decoder","readers","err","console","error","start","onDetected","result","scannedBarcode","codeResult","code","log","stop","id","Navbar","searchTerm","onSearchChange","onSearchSubmit","navigate","useNavigate","isMobile","setIsMobile","useState","showVideo","setShowVideo","barcodeCaptured","setBarcodeCaptured","menuOpen","setMenuOpen","currentURL","location","pathname","handleResize","addEventListener","removeEventListener","Fragment","concat","Link","to","placeholder","value","onChange","onClick","handleSearchFieldClick","barcode","handleVideoClose","handleMenuToggle","path","handleNavigate","WavyHero","xmlns","viewBox","preserveAspectRatio","shapeRendering","d","xlinkHref","x","y","HeroSection","BookList","books","setBooks","setSearchTerm","selectedBook","setSelectedBook","currentPage","setCurrentPage","itemsPerPage","hasSearched","setHasSearched","fetch","then","response","json","data","booksWithoutRomance","works","filter","work","includes","cover_edition_key","map","key","title","cover_i","catch","indexOfLastBook","indexOfFirstBook","currentBooks","slice","paginate","pageNumber","sliderSettings","dots","infinite","speed","slidesToShow","slidesToScroll","event","handleSearchSubmit","query","docs","Slider","src","alt","length","author_name","ratings_average","round","edition_count","toggleDetails","from","_","index","href","About","App","Router","Routes","Route","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.a3ddadd6.chunk.js","sourcesContent":["// src/components/StarRating.js\nimport React from 'react';\n\nconst StarRating = ({ rating }) => {\n  const fullStars = Math.floor(rating);\n  const halfStars = Math.ceil(rating - fullStars);\n  const emptyStars = 5 - fullStars - halfStars;\n\n  const renderStars = (count, type) => {\n    const starType = type === 'full' ? '★' : type === 'half' ? '½' : '☆';\n    return Array(count).fill(starType).join('');\n  };\n\n  return (\n    <div>\n      {renderStars(fullStars, 'full')}\n      {renderStars(halfStars, 'half')}\n      {renderStars(emptyStars, 'empty')}\n    </div>\n  );\n};\n\nexport default StarRating;\n","// src/components/BookDetails.js\nimport React, { useState } from 'react';\nimport StarRating from './StarRating';\n\nconst BookDetails = ({ book, isVisible }) => {\n  const { publish_date, publisher, language } = book;\n\n  return (\n    <div className=\"book-details-transition\">\n      {/* <h3>{book.title}</h3>\n      by {book.author_name ? book.author_name.join(', ') : 'N/A'} */}\n      <p>{book.first_sentence || 'N/A'}</p>\n      <div className=\"book-details-row\">\n        <div className=\"book-publication\">\n          <p><span>Publication Date:</span><br /> {publish_date ? publish_date[0] || 'N/A' : 'N/A'}</p>\n        </div>\n        <div className=\"book-publication\">\n          <p><span>Publisher:</span><br /> {publisher ? publisher[0] : 'N/A'}</p>\n        </div>\n        <div className=\"book-publication\">\n          <p><span>Language:</span><br /> {language && language[0] == 'eng' ? 'English' : 'N/A'}</p>\n        </div>\n      </div>\n      <div className=\"book-details-row\">\n        <div className=\"book-publication\">\n          <p><span>ISBN:</span><br /> {book.isbn ? book.isbn[0] : 'N/A'}</p>\n        </div>\n        <div className=\"book-publication\">\n          <p><span>Edition:</span><br /> {book.edition_key ? book.edition_key[0] : 'N/A'}</p>\n        </div>\n        <div className=\"book-publication\">\n          <p><span>Number of Pages:</span><br /> {book.number_of_pages_median + ' ' || 'N/A'}</p>\n        </div>\n      </div>\n      <p>Genres: <small>{book.subject ? book.subject.join(', ') : 'N/A'}</small></p>\n      <p>Tags: <small>{book.subject ? book.subject.join(', ') : 'N/A'}</small></p>\n      {book.rating && (\n        <div>\n          <p>Rating: {book.rating.toFixed(1)}</p>\n          <StarRating rating={book.rating} />\n        </div>\n      )}\n      {/* Add more details as needed */}\n    </div>\n  );\n};\n\nexport default BookDetails;\n","// BarcodeScanner.js\n\nimport React, { useEffect } from 'react';\nimport Quagga from 'quagga';\nimport './BarcodeScanner.css'; // Import a CSS file for styling\n\nconst BarcodeScanner = ({ onBarcodeScanned }) => {\n  useEffect(() => {\n    const isMobile = window.innerWidth <= 768;\n\n    if (isMobile) {\n      Quagga.init({\n        inputStream: {\n          name: 'Live',\n          type: 'LiveStream',\n          target: document.querySelector('#barcode-scanner'),\n        },\n        decoder: {\n          readers: ['ean_reader'],\n        },\n      }, (err) => {\n        if (err) {\n          console.error('Error initializing Quagga:', err);\n          return;\n        }\n        Quagga.start();\n      });\n\n      Quagga.onDetected((result) => {\n        const scannedBarcode = result.codeResult.code;\n        console.log(\"Scanned: \" + scannedBarcode);\n        onBarcodeScanned(scannedBarcode);\n        Quagga.stop();\n      });\n\n      return () => {\n        Quagga.stop();\n      };\n    }\n  }, [onBarcodeScanned]);\n\n  return (\n    <div>\n      {window.innerWidth <= 768 && <div id=\"barcode-scanner\"></div>}\n    </div>\n  );\n};\n\nexport default BarcodeScanner;\n","// Navbar.js\n\nimport React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport './Navbar.css';\nimport BarcodeScanner from './BarcodeScanner';\n\nconst Navbar = ({ searchTerm, onSearchChange, onSearchSubmit }) => {\n  const navigate = useNavigate();\n  const [isMobile, setIsMobile] = useState(window.innerWidth <= 768);\n  const [showVideo, setShowVideo] = useState(false);\n  const [barcodeCaptured, setBarcodeCaptured] = useState(false);\n  const [menuOpen, setMenuOpen] = useState(false);\n\n  const currentURL = window.location.pathname;\n\n  useEffect(() => {\n    const handleResize = () => {\n      setIsMobile(window.innerWidth <= 768);\n    };\n\n    window.addEventListener('resize', handleResize);\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  const handleBarcodeScanned = (barcode) => {\n    setBarcodeCaptured(true);\n    setShowVideo(false);\n    onSearchChange({ target: { value: barcode } });\n  };\n\n  const handleSearchFieldClick = () => {\n    setShowVideo(true);\n    setBarcodeCaptured(false);\n  };\n\n  const handleVideoClose = () => {\n    setShowVideo(false);\n    setBarcodeCaptured(false);\n  };\n\n  const handleMenuToggle = () => {\n    setMenuOpen(!menuOpen);\n  };\n\n  const handleNavigate = (path) => {\n    setMenuOpen(false);\n    navigate(path);\n  };\n\n\n  return (\n    <>\n      <nav className={`navbar ${menuOpen ? 'menu-open' : ''}`}>\n        <div className=\"navbar-title\">\n          <Link to=\"/\">\n            <h2>The Yellow Book Bag</h2>\n          </Link>\n        </div>\n        <div className=\"navbar-search-container\">\n          <div className=\"navbar-search\">\n            {currentURL === '/' || currentURL === '/yellowbookbag/' ? (\n              isMobile ? (\n                <>\n                  <div>\n                    <input\n                      type=\"text\"\n                      placeholder=\"Scan ISBN...\"\n                      value={searchTerm}\n                      onChange={onSearchChange}\n                      onClick={handleSearchFieldClick}\n                    />\n                    {showVideo && (\n                      <div className=\"video-container\">\n                        <BarcodeScanner onBarcodeScanned={handleBarcodeScanned} />\n                        <button className=\"close-video-btn\" onClick={handleVideoClose}>\n                          <i className=\"fas fa-times\"></i>\n                        </button>\n                      </div>\n                    )}\n                    <button className=\"search-button\" onClick={onSearchSubmit}>\n                      <i className=\"fas fa-search\"></i>\n                    </button>\n                  </div>\n                </>\n              ) : (\n                <>\n                  <input\n                    type=\"text\"\n                    id=\"searchInput\"\n                    placeholder=\"Enter your search query\"\n                    value={searchTerm}\n                    onChange={onSearchChange}\n                  />\n                  <button className=\"search-button\" onClick={onSearchSubmit}>\n                    <i className=\"fas fa-search\"></i>\n                  </button>\n                </>\n              )\n            ) : null}\n          </div>\n          <div className=\"navbar-list\">\n            <button className=\"menu-toggle\" onClick={handleMenuToggle}>\n              <i className={`fas ${menuOpen ? 'fa-times' : 'fa-bars'}`}></i>\n            </button>\n            {menuOpen && (\n              <ul>\n                <li onClick={() => handleNavigate('/about')}>About</li>\n              </ul>\n            )}\n          </div>\n        </div>\n      </nav>\n    </>\n  );\n};\n\nexport default Navbar;\n","import React from 'react';\nimport './WavyHero.css'; // Make sure to import your CSS file for styling\n\nconst WavyHero = () => {\n  return (\n    <div className=\"hero-section\">\n      <div className=\"hero-text\">\n        <h1>What's in Your Book Bag?</h1>\n        <p>Some additional information...</p>\n      </div>\n      <svg className=\"waves\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"15 24 90 30\" preserveAspectRatio=\"none\" shapeRendering=\"auto\">\n        <defs>\n          <path id=\"gentle-wave\" d=\"M-160 44c30 0 58-18 88-18s 58 18 88 18 58-18 88-18 58 18 88 18 v44h-352z\" />\n        </defs>\n        <g className=\"parallax\">\n          <use xlinkHref=\"#gentle-wave\" x=\"48\" y=\"0\" fill=\"rgba(255,255,255,0.7)\" />\n          <use xlinkHref=\"#gentle-wave\" x=\"48\" y=\"3\" fill=\"rgba(255,255,255,0.5)\" />\n          <use xlinkHref=\"#gentle-wave\" x=\"48\" y=\"5\" fill=\"rgba(255,255,255,0.3)\" />\n          <use xlinkHref=\"#gentle-wave\" x=\"48\" y=\"7\" fill=\"#fff\" />\n          {/* Adding mountains */}\n          {/* <image href=\"https://theyellowbookbag.codependentllc.com/assets/images/bg-hero-kids.jpg\" x=\"30\" y=\"10\" width=\"40\" height=\"40\" /> */}\n        </g>\n      </svg>\n    </div>\n  );\n};\n\nexport default WavyHero;\n","// HeroSection.js\n\nimport React from 'react';\nimport './HeroSection.css'; // Import the CSS file for styling\nimport './WavyHero';\nimport WavyHero from './WavyHero';\n\nconst HeroSection = () => {\n  return (\n    <WavyHero />\n  );\n};\n\nexport default HeroSection;\n","// BookList.js\nimport React, { useState, useEffect } from 'react';\nimport Slider from 'react-slick';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport BookDetails from './BookDetails';\nimport Navbar from './Navbar';\nimport HeroSection from './HeroSection';\nimport './Modal.css';\nimport './BookList.css'; // Import the new CSS file\n\nconst BookList = () => {\n  const [books, setBooks] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [isMobile, setIsMobile] = useState(window.innerWidth <= 768);\n  const [selectedBook, setSelectedBook] = useState(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage] = useState(10);\n  const [hasSearched, setHasSearched] = useState(false);\n\n  const currentURL = window.location.pathname;\n\n  useEffect(() => {\n    // Fetch data from the Open Library API for popular books (no specific genre) with cover images\n    fetch('https://openlibrary.org/subjects/new.json?limit=10')\n      .then((response) => response.json())\n      .then((data) => {\n        // Filter out works with the \"romance\" genre\n        const booksWithoutRomance = data.works\n          .filter((work) => !work.subject.includes('/subjects/romance'))\n          .filter((work) => work.cover_edition_key) // Filter out works without cover images\n          .map((work) => ({\n            key: work.cover_edition_key,\n            title: work.title,\n            cover_i: null, // You can set this to null or fetch cover_i using another API endpoint\n          }));\n        setBooks(booksWithoutRomance);\n      })\n      .catch((error) => console.error('Error fetching data:', error));\n  }, []);\n  \n  const handleScan = (isbn) => {\n    setSearchTerm(isbn);\n  };\n\n  const handleSearchChange = (event) => {\n    setSearchTerm(event.target.value);\n  };\n\n  const handleSearchSubmit = () => {\n    const query = `https://openlibrary.org/search.json?q=${searchTerm}`;\n    console.log(\"Query String: \" + query);\n\n    // Fetch the data from the API\n    fetch(query)\n      .then((response) => response.json())\n      .then((data) => {\n        setBooks(data.docs);\n        setHasSearched(true);\n      })\n      .catch((error) => console.error('Error fetching data:', error));\n\n  };\n\n  const handleViewDetails = (book) => {\n    setSelectedBook(book);\n  };\n\n  const handleCloseDetails = () => {\n    setSelectedBook(null);\n  };\n\n  const toggleDetails = (book) => {\n    setSelectedBook(selectedBook === book ? null : book);\n  };\n\n  const indexOfLastBook = currentPage * itemsPerPage;\n  const indexOfFirstBook = indexOfLastBook - itemsPerPage;\n  const currentBooks = books.slice(indexOfFirstBook, indexOfLastBook);\n\n  const paginate = (pageNumber) => {\n    setCurrentPage(pageNumber);\n    setSelectedBook(null);\n  };\n\n  const noCoverImageUrl = 'https://via.placeholder.com/200x300.png'; // Replace with your actual \"no cover\" image URL\n\n  const sliderSettings = isMobile\n  ? {\n      dots: true,\n      infinite: true,\n      speed: 500,\n      slidesToShow: 1,\n      slidesToScroll: 1,\n    }\n  : {\n      dots: true,\n      infinite: true,\n      speed: 500,\n      slidesToShow: 5,\n      slidesToScroll: 1,\n    };\n\n\n  return (\n    <div>\n      <Navbar\n        searchTerm={searchTerm}\n        onSearchChange={handleSearchChange}\n        onSearchSubmit={handleSearchSubmit}\n      />\n      {!hasSearched && (\n        <>\n        {/* Include the HeroSection component */}\n          <HeroSection />\n          <div className=\"carousel-container\">\n            <h2>New Books</h2>\n            <Slider {...sliderSettings}>\n              {books.map((book) => (\n                <div key={book.key} className=\"carousel-item\">\n                  <img\n                    src={`https://covers.openlibrary.org/b/olid/${book.key}-M.jpg`}\n                    alt={`Cover for ${book.title}`}\n                    className=\"cover-image\"\n                  />\n                  <p>{book.title}</p>\n                </div>\n              ))}\n            </Slider>\n          </div>\n        </>\n      )}\n      {hasSearched && books.length === 0 && (\n        <p>No books found. Please try a different search term.</p>\n      )}\n      {hasSearched && books.length > 0 && (\n        <div className=\"carousel-container\">\n            <ul>\n              {currentBooks.map((book) => (\n                <li key={book.key} className=\"book-container\">\n                    <p><b>{book.title}</b><br />\n                    <small>by {book.author_name ? book.author_name.join(', ') : 'Unknown'} | Star Reviews: {book.ratings_average ? Math.round(book.ratings_average * 100) / 100 : 'N/A'} | Edition count: {book.edition_count}</small></p>\n                  <div className=\"book-info\">\n                    <div className=\"book-details\">\n                      {book.cover_i ? (\n                        <img\n                          src={`https://covers.openlibrary.org/b/id/${book.cover_i}-M.jpg`}\n                          alt={`Cover for ${book.title}`}\n                          className=\"cover-image\"\n                        />\n                      ) : (\n                        <img\n                          src={noCoverImageUrl}\n                          alt=\"No Cover\"\n                        />\n                      )}\n                      <div className=\"book-text\">\n                        <button onClick={() => toggleDetails(book)}>\n                          {selectedBook === book ? 'Hide Details' : 'View Details'}\n                        </button>\n                        <div>\n                          {selectedBook === book && <BookDetails book={book} />}\n                        </div>\n                      </div>\n                      {/* Conditionally render the details based on the button click */}\n                    </div>\n                  </div>\n                </li>\n              ))}\n            </ul>\n            </div>\n      )}\n      {books.length > itemsPerPage && (\n        <nav>\n          <ul className=\"pagination\">\n            {Array.from({ length: Math.ceil(books.length / itemsPerPage) }).map(\n              (_, index) => (\n                <li\n                  key={index + 1}\n                  className={currentPage === index + 1 ? 'active' : ''}\n                  onClick={() => paginate(index + 1)}\n                >\n                  <a href=\"#!\" onClick={() => paginate(index + 1)}>\n                    {index + 1}\n                  </a>\n                </li>\n              )\n            )}\n          </ul>\n        </nav>\n      )}\n    </div>\n  );\n};\n\nexport default BookList;\n","// About.js\nimport React from 'react';\nimport Navbar from './Navbar';\n\nconst About = () => {\n  return (\n    <div>\n      <Navbar />\n      <h2>About Page</h2>\n      {/* Add content for your about page */}\n    </div>\n  );\n};\n\nexport default About;\n","// src/App.js\nimport React from 'react';\nimport { HashRouter as Router, Routes, Route } from 'react-router-dom';\nimport BookList from './components/BookList';\nimport About from './components/About';\n\nconst App = () => {\n  return (\n    <Router>\n      <div>\n        {/* <BookList /> */}\n        <Routes>\n          <Route path=\"/about\" element={<About />} />\n          <Route path=\"/\" element={<BookList />} />\n        </Routes>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}