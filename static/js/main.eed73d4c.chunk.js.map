{"version":3,"sources":["components/StarRating.js","components/BookDetails.js","components/BookList.js","App.js","reportWebVitals.js","index.js"],"names":["StarRating","_ref","rating","fullStars","Math","floor","halfStars","ceil","emptyStars","renderStars","count","type","starType","Array","fill","join","React","createElement","BookDetails","book","title","author_name","first_publish_year","toFixed","BookList","books","setBooks","useState","searchTerm","setSearchTerm","selectedBook","setSelectedBook","useEffect","async","booksWithRating","axios","get","data","works","map","random","error","console","fetchData","filteredBooks","filter","toLowerCase","includes","placeholder","value","onChange","event","target","key","onClick","handleBookClick","App","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"yKAsBeA,MAnBIC,IAAgB,IAAfC,OAAEA,GAAQD,EAC5B,MAAME,EAAYC,KAAKC,MAAMH,GACvBI,EAAYF,KAAKG,KAAKL,EAASC,GAC/BK,EAAa,EAAIL,EAAYG,EAE7BG,EAAcA,CAACC,EAAOC,KAC1B,MAAMC,EAAoB,SAATD,EAAkB,SAAe,SAATA,EAAkB,OAAM,SACjE,OAAOE,MAAMH,GAAOI,KAAKF,GAAUG,KAAK,KAG1C,OACEC,IAAAC,cAAA,WACGR,EAAYN,EAAW,QACvBM,EAAYH,EAAW,QACvBG,EAAYD,EAAY,WCIhBU,MAjBKjB,IAAc,IAAbkB,KAAEA,GAAMlB,EAC3B,OACEe,IAAAC,cAAA,WACED,IAAAC,cAAA,UAAKE,EAAKC,OACVJ,IAAAC,cAAA,SAAG,WAASE,EAAKE,aACjBL,IAAAC,cAAA,SAAG,oBAAkBE,EAAKG,oBACzBH,EAAKjB,QACJc,IAAAC,cAAA,WACED,IAAAC,cAAA,SAAG,WAASE,EAAKjB,OAAOqB,QAAQ,IAChCP,IAAAC,cAACjB,EAAU,CAACE,OAAQiB,EAAKjB,YCmEpBsB,MA1EEA,KACf,MAAOC,EAAOC,GAAYC,mBAAS,KAC5BC,EAAYC,GAAiBF,mBAAS,KACtCG,EAAcC,GAAmBJ,mBAAS,MAEjDK,oBAAU,KACUC,WAChB,IACE,MAKMC,SALiBC,IAAMC,IAC3B,0DAI+BC,KAAKC,MAAMC,IAAKpB,IAAI,IAChDA,EACHjB,OAAwB,EAAhBE,KAAKoC,YAEfd,EAASQ,GACT,MAAOO,GACPC,QAAQD,MAAM,uBAAwBA,KAI1CE,IACC,IAEH,MAWMC,EAAgBnB,EACnBoB,OAAQ1B,IAJF,GAKN0B,OAAQ1B,GACPA,EAAKC,MAAM0B,cAAcC,SAASnB,EAAWkB,gBAOjD,OACE9B,IAAAC,cAAA,WACED,IAAAC,cAAA,UAAI,yBACJD,IAAAC,cAAA,SACEN,KAAK,OACLqC,YAAY,kBACZC,MAAOrB,EACPsB,SA5BgBC,IACpBtB,EAAcsB,EAAMC,OAAOH,OAC3BlB,EAAgB,SA4Bdf,IAAAC,cAAA,UACG2B,EAAcL,IAAKpB,GAClBH,IAAAC,cAAA,MAAIoC,IAAKlC,EAAKkC,IAAKC,QAASA,IAfXnC,KACvBY,EAAgBZ,IAcwBoC,CAAgBpC,IAC/CA,EAAKC,SAIXU,GACCd,IAAAC,cAAA,WACED,IAAAC,cAACC,EAAW,CAACC,KAAMW,OC1Dd0B,MATHA,IAERxC,IAAAC,cAAA,WACED,IAAAC,cAAA,UAAI,oBACJD,IAAAC,cAACO,EAAQ,OCIAiC,MAZSC,IAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK7D,IAAiD,IAAhD+D,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAASnE,EACpE+D,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCDDW,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHzD,IAAAC,cAACD,IAAM0D,WAAU,KACf1D,IAAAC,cAACuC,EAAG,QAORC","file":"static/js/main.eed73d4c.chunk.js","sourcesContent":["// src/components/StarRating.js\nimport React from 'react';\n\nconst StarRating = ({ rating }) => {\n  const fullStars = Math.floor(rating);\n  const halfStars = Math.ceil(rating - fullStars);\n  const emptyStars = 5 - fullStars - halfStars;\n\n  const renderStars = (count, type) => {\n    const starType = type === 'full' ? '★' : type === 'half' ? '½' : '☆';\n    return Array(count).fill(starType).join('');\n  };\n\n  return (\n    <div>\n      {renderStars(fullStars, 'full')}\n      {renderStars(halfStars, 'half')}\n      {renderStars(emptyStars, 'empty')}\n    </div>\n  );\n};\n\nexport default StarRating;\n","// src/components/BookDetails.js\nimport React from 'react';\nimport StarRating from './StarRating';\n\nconst BookDetails = ({ book }) => {\n  return (\n    <div>\n      <h3>{book.title}</h3>\n      <p>Author: {book.author_name}</p>\n      <p>First Published: {book.first_publish_year}</p>\n      {book.rating && (\n        <div>\n          <p>Rating: {book.rating.toFixed(1)}</p>\n          <StarRating rating={book.rating} />\n        </div>\n      )}\n      {/* Add more details as needed */}\n    </div>\n  );\n};\n\nexport default BookDetails;\n","// src/components/BookList.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport BookDetails from './BookDetails';\nimport BookReviews from './BookReviews';\n\nconst BookList = () => {\n  const [books, setBooks] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedBook, setSelectedBook] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(\n          'https://openlibrary.org/subjects/family-friendly.json'\n        );\n        // Assuming the API response includes a rating property\n        // Modify accordingly based on the actual API response\n        const booksWithRating = response.data.works.map((book) => ({\n          ...book,\n          rating: Math.random() * 5, // Example rating (replace with actual rating if available)\n        }));\n        setBooks(booksWithRating);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const handleSearch = (event) => {\n    setSearchTerm(event.target.value);\n    setSelectedBook(null); // Clear selected book when a new search term is entered\n  };\n\n  const isFamilyFriendly = (book) => {\n    // Add your family-friendly criteria here\n    // For simplicity, this example assumes all books are family-friendly.\n    return true;\n  };\n\n  const filteredBooks = books\n    .filter((book) => isFamilyFriendly(book))\n    .filter((book) =>\n      book.title.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n\n  const handleBookClick = (book) => {\n    setSelectedBook(book);\n  };\n\n  return (\n    <div>\n      <h2>Family-Friendly Books</h2>\n      <input\n        type=\"text\"\n        placeholder=\"Search by title\"\n        value={searchTerm}\n        onChange={handleSearch}\n      />\n      <ul>\n        {filteredBooks.map((book) => (\n          <li key={book.key} onClick={() => handleBookClick(book)}>\n            {book.title}\n          </li>\n        ))}\n      </ul>\n      {selectedBook && (\n        <div>\n          <BookDetails book={selectedBook} />\n          {/* Add book reviews component here */}\n          {/* <BookReviews reviews={selectedBook.reviews} /> */}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default BookList;\n","// src/App.js\nimport React from 'react';\nimport BookList from './components/BookList';\n\nconst App = () => {\n  return (\n    <div>\n      <h1>Open Library App</h1>\n      <BookList />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}